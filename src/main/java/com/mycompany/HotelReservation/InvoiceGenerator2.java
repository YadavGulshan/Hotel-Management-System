package com.mycompany.HotelReservation;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfDocument;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

import javax.print.Doc;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.Date;


public class InvoiceGenerator2 {
    private static int Userid;
    private static String Username = "gulshan";
    private static int UserPhone;
    private static String UserEmail;


    // Room Details var
    private static int RoomNumber;
    private static String RoomType;
    private static String BedType;
    private static int CalculatedPrice = 1000;

    // Check in and out details
    private static String UserCheckinDetails ="heye";
    private static String UserCheckOutDetails ="bciasb";



    // Fonts
    private static final Font boldFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static final Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static final Font normalFont = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.NORMAL);
    private static final Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static final Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);


    // Constructor.
//    InvoiceGenerator2(int id, String Name, int Phone, String Email, int Room, String Type, String Bed, int Price, String CheckinDetails, String CheckOutDetails) {
//        Userid = id;
//        Username = Name;
//        UserEmail = Email;
//        UserPhone = Phone;
//        RoomNumber = Room;
//        RoomType = Type;
//        BedType = Bed;
//        CalculatedPrice = Price;
//        UserCheckinDetails = CheckinDetails;
//        UserCheckOutDetails = CheckOutDetails;
//    }
    private static final String FILE = "out/invoices/indez.pdf";

    public static void main(String[] args) throws Exception{
            Document document = new Document();
        try
        {
            PdfWriter.getInstance(document, new FileOutputStream(FILE));
            document.open();
            // Add MetaData.
            addMetaData(document);
            // Add the title.
            addTitle(document);
            // Add Body
            addBody(document);

            // Add table
            addtable(document);
            document.close();
            System.out.println("Invoice Generated!");
        } catch (DocumentException e) {
            e.printStackTrace();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }

    public static void addMetaData(Document document) {
        document.addAuthor("Gulshan Yadav");
        document.addCreator("Hotelopedia");
        document.addTitle("Invoice");
    }

    public static void addTitle(Document document) throws DocumentException {
        Paragraph preface = new Paragraph();

        // Header for pdf
        preface.add(new Paragraph("HoteloPedia", boldFont));
        preface.add(new Paragraph(
                "Invoice generated by: " + System.getProperty("user.name") + ", " + new Date(),
                normalFont));
       addEmptyLine(preface, 2);

       document.add(preface);
    }

    public static void addBody(Document document) throws DocumentException{
        //Invoice details
        Paragraph preface = new Paragraph();
        try{
            preface.add(new Paragraph("ID: "+ Userid));
            preface.add(new Paragraph("Name: "+ Username));
            preface.add(new Paragraph("Phone: "+ UserPhone));
            preface.add(new Paragraph("Email: "+ UserEmail));
            preface.add(new Paragraph("Room Number: "+ RoomNumber));
            preface.add(new Paragraph("Room Type: "+ RoomType));
            preface.add(new Paragraph("Bed Type: "+ BedType));
            preface.add(new Paragraph("Total Bill: "+ CalculatedPrice));

            // Spacing for table
            addEmptyLine(preface, 5);

            // Add the data to pdf
            document.add(preface);
        }
        catch (DocumentException e){
            e.printStackTrace();
        }
    }

    public static  void addtable(Document document ) throws DocumentException{

        PdfPTable table = new PdfPTable(3);

        // Cells here
        PdfPCell cell;

        // Checkin Title
        cell = new PdfPCell(new Phrase("Check In Date"));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);

        // Out Title
        cell= new PdfPCell(new Phrase("Check Out Date"));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);

        // Total title
        cell = new PdfPCell(new Phrase("Total"));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);

        // Set the cell as header
        table.setHeaderRows(1);

        // Data here
        table.addCell(UserCheckinDetails);
        table.addCell(UserCheckOutDetails);
        table.addCell(String.valueOf(CalculatedPrice));

//        section.add(table);
        document.add(table);
    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i= 0; i<number;i++){
            paragraph.add(new Paragraph(" "));
        }
    }

    private  static void addBorder(Paragraph paragraph, int num){
        for (int i= 0; i<num;i++){
//            paragraph.add(new)
            // TODO : Add the borders.
        }
    }

}
